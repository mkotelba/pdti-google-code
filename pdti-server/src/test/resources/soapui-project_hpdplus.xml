<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="HpdPlusProviderInformationDirectoryService" resourceRoot="" soapui-version="4.5.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config">
  <con:description>This SoapUI project utilizes the MSPD WSDL and test data.</con:description><con:settings/>
  <con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding" type="wsdl" bindingName="{urn:gov:hhs:onc:hpdplus:2013}Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding" soapVersion="1_2" anonymous="optional" definition="${#Project#project.test.server.wsdl.url}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:endpoints>
      <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
    </con:endpoints>
    <con:operation isOneWay="false" action="urn:gov:hhs:onc:hpdplus:2013:Hpd_Plus_ProviderInformationQueryRequest" name="Hpd_Plus_ProviderInformationQueryRequest" bindingOperationName="Hpd_Plus_ProviderInformationQueryRequest" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional">
      <con:settings/>
    </con:operation>
  </con:interface>
  <con:testSuite name="ProviderInformationQueryRequestTestSuite_Plus">
    <con:description>Searches for each of the five object types: Provider, Organization, Membership, Service, and Credential.</con:description><con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search_provider_by_name" searchProperties="true" id="c32cf9e5-f39b-4ab7-a71e-e1198c61ad97">
      <con:description>Basic search for Provider by givenName attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_name">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_name" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="givenName">
                     <dsml:value>Thomas</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="pager"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr uid XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="uid"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="mail"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr sn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="sn"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderlegaladdress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HCSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcspecialization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr givenName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="givenname"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderlanguagesupported"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderpracticeaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="telephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="facsimiletelephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr cn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="cn"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr initials XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="initials"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="description"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcProfession XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcprofession"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderbillingaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="objectclass"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaservice"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdprovidermailingaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcidentifier"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="mobile"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr title XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="title"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr gender XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="gender"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdcredential"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderstatus"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRole XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcrole"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>26</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search_org_by_id" searchProperties="true" id="83868f79-29fc-45c8-a1e0-040ee822cd9a">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_id">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_id" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>org1</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="attr objectClass XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="objectclass"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="o"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="businesscategory"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="description"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="facsimiletelephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="telephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcidentifier"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdorgid"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="clinicalinformationcontact"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcregisteredname"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcspecialization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdcredential"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaservice"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderbillingaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderlanguagesupported"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderlegaladdress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdprovidermailingaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderpracticeaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdproviderstatus"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>19</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search_membership_by_provider" searchProperties="true" id="37d87fb5-6488-4405-87ae-ec293b1abd9a">
      <con:description>Basic search for Membership by hpdHasAProvider attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_provider">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_provider" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdHasAProvider">
                      <dsml:value>HcIdentifier=provider1,ou=Providers,${#Project#project.test.server.dsml.dn.base}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			<con:assertion type="XPath Match" name="attr objectClass XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="objectclass"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasanorg"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdmemberid"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaservice"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaprovider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="mail"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="mobile"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="pager"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="telephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="facsimiletelephonenumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search_service_by_id" searchProperties="true" id="97bf4c7b-4e40-42a9-a8c2-b4646c2d4593">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_id">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_id" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>1</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			<con:assertion type="XPath Match" name="attr objectClass XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="objectclass"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdserviceaddress"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdserviceid"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdcertificate"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdintegrationprofile"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdcontentprofile"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="search_credential_by_id" searchProperties="true" id="e9222d91-45e5-45dd-bcab-356d80d22fd5">
      <con:description>Basic search for Credential by hpdCredentialId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_credential_by_id">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_credential_by_id" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Credentials,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdCredentialId">
                      <dsml:value>2</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="attr hpdCredentialId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdcredentialid"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialname"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialnumber"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialType XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialtype"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="description"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialIssueDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialissuedate"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialRenewalDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialrenewaldate"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="credentialstatus"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasanorg"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaprovider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:properties/>
  </con:testSuite>
  <con:testSuite name="Workflows_Plus">
    <con:description>Three workflows are from the Western States Consortium (WSC) and one from the EHR/HIE Interoperability Workgroup (IWG). The second WSC workflow happens to mirror the IWG workflow, so it was combined into one test case.</con:description><con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WSC_1" searchProperties="true" id="9a0dd776-689d-4b7a-9f74-0847d5966d95">
      <con:description>Search for a specific Provider, then find its Service.</con:description><con:settings/>
      
      
      
      <con:testStep type="request" name="search_provider_by_cn">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_cn" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="cn">
                     <dsml:value>John Smith</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';

//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hpdhasaservice"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';

count(//dsml:attr)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_service_by_hpdServiceId(rdn)">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId(rdn)" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdServiceId">
                        <dsml:value>6</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="hpdServiceType">
                        <dsml:value>Direct</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdServiceAddress"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WSC_2_and_IWG" searchProperties="true" id="f42973ce-ef2c-4bc5-9a7d-224688a0c4e4">
      <con:description>Search for a specific Organization, then use Memberships to find all of its Providers, then find the Provider's Services.</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_id">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_id" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="hpdOrgId">
                    <dsml:value>org2</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="o"/>
	               <dsml:attribute name="businessCategory"/>
	               <dsml:attribute name="hcRegisteredName"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="clinicalInformationContact"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="policyInformation"/>
	               <dsml:attribute name="hpdOrgId"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="search_membership_by_org">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_org" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                      <dsml:equalityMatch name="hpdHasAnOrg">
                         <dsml:value>hpdOrgId=org2,ou=Organizations,${#Project#project.test.server.dsml.dn.base}</dsml:value>
                      </dsml:equalityMatch>
                     <dsml:present name="hpdHasAProvider"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="search_provider_by_hcidentifier(rdn)">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_hcidentifier(rdn)" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="HcIdentifier">
                    <dsml:value>provider2</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="uid"/>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="hcProfession"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="displayName"/>
	               <dsml:attribute name="title"/>
	               <dsml:attribute name="givenName"/>
	               <dsml:attribute name="initials"/>
	               <dsml:attribute name="sn"/>
	               <dsml:attribute name="cn"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="gender"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="physicalDeliveryOfficeName"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="mobile"/>
	               <dsml:attribute name="pager"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="suffix"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="hpdProviderLegalAddress"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      
      <con:testStep type="request" name="search_service_by_hpdServiceId(rdn)">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId(rdn)" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdServiceId">
                        <dsml:value>6</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="hpdIntegrationProfile">
                        <dsml:value>DirectProjectSMTP</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdServiceAddress"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WSC_3" searchProperties="true" id="59bb8da9-6653-41cc-a53b-25feae4738a5">
      <con:description>Search for a specific Provider, then use Memberships to find its Organization, then find the Organization's Services.</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_givenName_and_sn">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_givenName_and_sn" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="givenName">
                     <dsml:value>Thomas</dsml:value>
                  </dsml:equalityMatch>
                  <dsml:equalityMatch name="sn">
                     <dsml:value>Jones</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="uid"/>
                  <dsml:attribute name="hcIdentifier"/>
                  <dsml:attribute name="hcProfession"/>
                  <dsml:attribute name="description"/>
                  <dsml:attribute name="hpdProviderStatus"/>
                  <dsml:attribute name="displayName"/>
                  <dsml:attribute name="title"/>
                  <dsml:attribute name="givenName"/>
                  <dsml:attribute name="initials"/>
                  <dsml:attribute name="sn"/>
                  <dsml:attribute name="cn"/>
                  <dsml:attribute name="hpdProviderLanguageSupported"/>
                  <dsml:attribute name="gender"/>
                  <dsml:attribute name="mail"/>
                     <dsml:attribute name="physicalDeliveryOfficeName"/>
                  <dsml:attribute name="hpdProviderMailingAddress"/>
                  <dsml:attribute name="hpdProviderBillingAddress"/>
                  <dsml:attribute name="hpdProviderPracticeAddress"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="hcSpecialization"/>
                  <dsml:attribute name="suffix"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="hpdProviderLegalAddress"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration>
                <definition/>
              </con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="search_membership_by_hpdHasAProvider">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAProvider" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdHasAProvider">
                     <dsml:value>HcIdentifier=provider1,ou=Providers,${#Project#project.test.server.dsml.dn.base}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="search_org_by_hcidentifier(rdn)">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hcidentifier(rdn)" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                   <dsml:equalityMatch name="HcIdentifier">
                      <dsml:value>org1</dsml:value>
                   </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="o"/>
                  <dsml:attribute name="HcIdentifier"/>
                  <dsml:attribute name="HcRegisteredAddr"/>
                  <dsml:attribute name="hpdOrgId"/>
                  <dsml:attribute name="hpdHasAService"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdServiceId">
                     <dsml:value>1</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdServiceAddress"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase><con:properties/>
  </con:testSuite>
  <con:testSuite name="Message_Compliance_Plus"><con:description>Test cases for elements outside of the data model</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RequestIDs_Equal" searchProperties="true" id="0815e6ca-486e-41dd-ba1f-86701778f6db"><con:description>Asserts that the attribute requestID sent in with the request is identical to the one sent back in the response.</con:description><con:settings/><con:testStep type="request" name="RequestIDs_Equal">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="RequestIDs_Equal" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="givenName">
                     <dsml:value>Thomas</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="cn"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			






























<con:assertion type="GroovyScriptAssertion" name="requestID match in response Script Assertion"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def request = groovyUtils.getXmlHolder(messageExchange.getRequestContentAsXml());
def response = groovyUtils.getXmlHolder(messageExchange.getResponseContentAsXml());

def requestID = request["//@requestID"];

def responseIDs = response["//@requestID"];

for (i in responseIDs){
	assert (requestID == i);
}</scriptText></con:configuration></con:assertion><con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Unallowed_Metadata" searchProperties="true" id="2dcbf85f-62a8-4fe8-9d40-7080a287ca68"><con:description>HPDPlus-only test case. Populates metadata with an unallowed value and expects an error response.</con:description><con:settings/><con:testStep type="request" name="Unallowed_Metadata">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="Unallowed_Metadata" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <hpdplus:requestMetadata>
            <hpdplus:properties>
               <hpdplus:property name="bad_metadata"/>
            </hpdplus:properties>
         </hpdplus:requestMetadata>
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="givenName">
                     <dsml:value>Thomas</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="HcIdentifier"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			



















<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcidentifier"</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>








<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="hpdPlusError presence XPath Match"><con:configuration><path>declare namespace hpdplus='urn:gov:hhs:onc:hpdplus:2013';

boolean(//hpdplus:hpdPlusError[1]/hpdplus:message)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="requestID match in response Script Assertion"><con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def request = groovyUtils.getXmlHolder(messageExchange.getRequestContentAsXml());
def response = groovyUtils.getXmlHolder(messageExchange.getResponseContentAsXml());

def requestID = request["//@requestID"];

def responseIDs = response["//@requestID"];

for (i in responseIDs){
	assert (requestID == i);
}</scriptText></con:configuration></con:assertion><con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Allowed_Metadata" searchProperties="true" id="69b9b78c-0d7f-4bca-ab6e-dbc2fdb30c0e"><con:description>HPDPlus-only test case.Populates metadata with all of the allowed values and expects a successful response.</con:description><con:settings/><con:testStep type="request" name="Allowed_Metadata">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="Allowed_Metadata" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <hpdplus:requestMetadata>
            <hpdplus:properties>
               <hpdplus:property name="doNotFederate"/>
               <hpdplus:property name="flattenResponse"/>
            </hpdplus:properties>
         </hpdplus:requestMetadata>
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="givenName">
                     <dsml:value>Thomas</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="HcIdentifier"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			



















<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr/lower-case(@name)="hcidentifier"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>









<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="property flattenResponse XPath Match"><con:configuration><path>declare namespace hpdplus='urn:gov:hhs:onc:hpdplus:2013';

//hpdplus:responseMetadata/hpdplus:properties/hpdplus:property[@name="flattenResponse"]</path><content>&lt;hpdplus:property name="flattenResponse" xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013" xmlns:hpd="urn:ihe:iti:hpd:2010" xmlns:S="http://www.w3.org/2003/05/soap-envelope"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="property doNotFederate XPath Match"><con:configuration><path>declare namespace hpdplus='urn:gov:hhs:onc:hpdplus:2013';

//hpdplus:responseMetadata/hpdplus:properties/hpdplus:property[@name="doNotFederate"]</path><content>&lt;hpdplus:property name="doNotFederate" xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013" xmlns:hpd="urn:ihe:iti:hpd:2010" xmlns:S="http://www.w3.org/2003/05/soap-envelope"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite>
  <con:testSuite name="Error_Plus">
        <con:description>Error test cases. These test cases utilize special requestIDs that are recognized by the MSPD Test Implementation and induce these errors in a special manner.</con:description><con:settings/>
        <con:runType>SEQUENTIAL</con:runType>
        <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="dup_req_id_test_hpdplus" searchProperties="true" id="d32cf9e5-f39b-4ab7-a71e-e1198c61ad97">
            <con:description>Duplicate requestIDs sent.</con:description><con:settings/>
            <con:testStep type="request" name="dup_req_id_test_hpdplus_1">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
                <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
                <con:request name="dup_req_id_test_hpdplus_1" outgoingWss="" incomingWss="">
                    <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                    </con:settings>
                    <con:encoding>UTF-8</con:encoding>
                    <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
                    <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:present name="uid"/>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
                    <con:assertion type="SOAP Response"/>
                    <con:assertion type="Schema Compliance">
                    <con:configuration><definition/></con:configuration>
                    </con:assertion>
                    <con:assertion type="SOAP Fault Assertion"/>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
            <con:testStep type="request" name="dup_req_id_test_hpdplus_2">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
                <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
                <con:request name="dup_req_id_test_hpdplus_2" outgoingWss="" incomingWss="">
                    <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                    </con:settings>
                    <con:encoding>UTF-8</con:encoding>
                    <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
                    <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
          <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
             <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:present name="uid"/>
                </dsml:filter>
             </dsml:searchRequest>
          </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
                    <con:assertion type="SOAP Response"/>
                    <con:assertion type="Schema Compliance">
                    <con:configuration><definition/></con:configuration>
                    </con:assertion>
                    <con:assertion type="SOAP Fault Assertion"/>
                    <con:assertion type="GroovyScriptAssertion" name="dup_req_id_test_hpdplus_response_script_assertion">
                        <con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def response = groovyUtils.getXmlHolder(messageExchange.getResponseContentAsXml());

assert(response["//*:hpdPlusError/@type"] = "duplicateRequestId");
                        </scriptText></con:configuration>
                    </con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
      <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="dup_req_id_federation_loop_test_hpdplus" searchProperties="true" id="c32cf9e5-f39b-4ab7-a71e-e1198c61ad97">
            <con:description>A federation loop is induced.</con:description><con:settings/>
            <con:testStep type="request" name="dup_req_id_federation_loop_test_hpdplus">
                <con:settings/>
                <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
                <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
                <con:request name="dup_req_id_federation_loop_test_hpdplus" outgoingWss="" incomingWss="">
                    <con:settings>
                    <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                    </con:settings>
                    <con:encoding>UTF-8</con:encoding>
                    <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
                    <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
          <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
             <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:present name="uid"/>
                </dsml:filter>
             </dsml:searchRequest>
          </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
                    <con:assertion type="SOAP Response"/>
                    <con:assertion type="Schema Compliance">
                    <con:configuration><definition/></con:configuration>
                    </con:assertion>
                    <con:assertion type="SOAP Fault Assertion"/>
                    <con:assertion type="GroovyScriptAssertion" name="dup_req_id_test_hpdplus_response_script_assertion">
                        <con:configuration><scriptText>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def response = groovyUtils.getXmlHolder(messageExchange.getResponseContentAsXml());

assert(response["//hpdplus:hpdPlusError/@type"].contains("duplicateRequestId"));
                        </scriptText></con:configuration>
                    </con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties/>
    </con:testCase>
   <con:properties/></con:testSuite><con:testSuite name="SI_Use_Cases_Plus">
    <con:description>See the &lt;a href="http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf">S&amp;I Query and Response use cases&lt;/a> for details about these test cases. Two test cases, Find Unique Individual and Find Unique Organization, were intentionally omitted.</con:description><con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Individual" searchProperties="true" id="c46d6e17-f483-46d2-babc-4d5bff7cfe86">
      <con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a list of individuals by specifying one or more individual attributes.</con:description><con:settings/>
      
      <con:testStep type="request" name="search_provider_by_name">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_name" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="givenName">
                        <dsml:value>Thomas</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="sn">
                        <dsml:value>Jones</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:and>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Unique_Individual" searchProperties="true" id="a22faae1-eb31-495b-a69d-046bef0a82a9"><con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a specific individual by specifying the individual unique reference ID.</con:description><con:settings/><con:testStep type="request" name="search_provider_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="HcIdentifier">
                    <dsml:value>provider3</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="uid"/>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="hcProfession"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="displayName"/>
	               <dsml:attribute name="title"/>
	               <dsml:attribute name="givenName"/>
	               <dsml:attribute name="initials"/>
	               <dsml:attribute name="sn"/>
	               <dsml:attribute name="cn"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="gender"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="physicalDeliveryOfficeName"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="mobile"/>
	               <dsml:attribute name="pager"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="suffix"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="hpdProviderLegalAddress"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Organization" searchProperties="true" id="e707b458-4594-460d-ba73-2fb17d38366f">
      <con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a list of organizations and relationships to other organizations by specifying one or more 
organization attributes.</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_o">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_o" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="o">
                    <dsml:value>Northside Hospital Maternity Unit</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="o"/>
	               <dsml:attribute name="businessCategory"/>
	               <dsml:attribute name="hcRegisteredName"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="clinicalInformationContact"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="policyInformation"/>
	               <dsml:attribute name="hpdOrgId"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdHasAnOrg">
                        <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:present name="hpdHasASubOrg"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdHasASubOrg">
                     <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Unique_Organization" searchProperties="true" id="6811fad9-c0ba-4cc1-a4fe-3b1008f0827e"><con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a specific organization and relationships to other organizations by specifying the 
organization unique reference ID.</con:description><con:settings/><con:testStep type="request" name="search_org_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                    <dsml:equalityMatch name="HcIdentifier">
                        <dsml:value>org4</dsml:value>
                    </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="o"/>
	               <dsml:attribute name="businessCategory"/>
	               <dsml:attribute name="hcRegisteredName"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="clinicalInformationContact"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="policyInformation"/>
	               <dsml:attribute name="hpdOrgId"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdHasAnOrg">
                        <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:present name="hpdHasASubOrg"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdHasASubOrg">
                     <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Organizations_for_Unique_Individual" searchProperties="true" id="1845cacc-7317-4c03-8c99-10cd886a3592">
      <con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a specific individual and related organizations by specifying an individual unique 
reference ID and one or more attributes of organizations. Organizations and relationships to the 
specified individual are returned when the organization matches the organization attributes and 
has a relationship to the individual specified. Attributes on the relationship between the individual 
and organization can also be specified in this query and further constrain which organizations and 
relationships are returned.</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="HcIdentifier">
                    <dsml:value>provider3</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="uid"/>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="hcProfession"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="displayName"/>
	               <dsml:attribute name="title"/>
	               <dsml:attribute name="givenName"/>
	               <dsml:attribute name="initials"/>
	               <dsml:attribute name="sn"/>
	               <dsml:attribute name="cn"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="gender"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="physicalDeliveryOfficeName"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="mobile"/>
	               <dsml:attribute name="pager"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="suffix"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="hpdProviderLegalAddress"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAProvider">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAProvider" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdHasAProvider">
                     <dsml:value>HcIdentifier=provider3,ou=Providers,${#Project#project.test.server.dsml.dn.base}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <!--<dsml:attribute name="hpdHasASubOrg"/>-->
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:or>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                     </dsml:or>
                     <dsml:present name="hpdHasASubOrg"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:or>
                     <dsml:equalityMatch name="hpdHasASubOrg">
                        <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="hpdHasASubOrg">
                        <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:or>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Individuals_for_Unique_Organization" searchProperties="true" id="42cf1506-3027-46fa-9cb9-a6bca9e08454">
      <con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a specific organization and related individuals by specifying an organization unique 
reference ID and one or more attributes of individuals. Individuals and relationships to the 
specified organization are returned when the individual matches the individual attributes and has a 
relationship to the organization specified. Attributes on the relationship between the individual and 
organization can also be specified in this query and further constrain which individuals and 
relationships are returned.</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                    <dsml:equalityMatch name="HcIdentifier">
                        <dsml:value>org2</dsml:value>
                    </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="o"/>
	               <dsml:attribute name="businessCategory"/>
	               <dsml:attribute name="hcRegisteredName"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="clinicalInformationContact"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="mail"/>
	               <dsml:attribute name="policyInformation"/>
	               <dsml:attribute name="hpdOrgId"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdHasAnOrg">
                        <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:present name="hpdHasASubOrg"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <!--<dsml:attribute name="hpdHasASubOrg"/>-->
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="hpdHasASubOrg">
                     <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasAProvider" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasAProvider" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:equalityMatch name="hpdHasAnOrg">
                        <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:present name="hpdHasAProvider"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_provider_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
               <dsml:or>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>provider2</dsml:value>
                  </dsml:equalityMatch>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>provider3</dsml:value>
                  </dsml:equalityMatch>
                  </dsml:or>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="uid"/>
                  <dsml:attribute name="hcIdentifier"/>
                  <dsml:attribute name="hcProfession"/>
                  <dsml:attribute name="description"/>
                  <dsml:attribute name="hpdProviderStatus"/>
                  <dsml:attribute name="displayName"/>
                  <dsml:attribute name="title"/>
                  <dsml:attribute name="givenName"/>
                  <dsml:attribute name="initials"/>
                  <dsml:attribute name="sn"/>
                  <dsml:attribute name="cn"/>
                  <dsml:attribute name="hpdProviderLanguageSupported"/>
                  <dsml:attribute name="gender"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="physicalDeliveryOfficeName"/>
                  <dsml:attribute name="hpdProviderMailingAddress"/>
                  <dsml:attribute name="hpdProviderBillingAddress"/>
                  <dsml:attribute name="hpdProviderPracticeAddress"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="hcSpecialization"/>
                  <dsml:attribute name="suffix"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="hpdProviderLegalAddress"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Find_Individuals_and_Organizations" searchProperties="true" id="a3d93523-29a7-451b-825d-ef3b42890bbf">
      <con:description>From http://wiki.siframework.org/file/view/ESI%20Query%20and%20Response.pdf
Request a list of individuals, organizations and relationships between (individuals/organizations or 
organization/organization) based on attributes of individuals, organizations, and 
individuals/organization relationships. Response includes all objects (whether individual, 
organization or relationship) where the individuals match all of the individual attributes specified, 
the organizations match all of the organization attributes and where a relationship exists between 
each individual and one or more organizations returned. In the event the query includes one or 
more attributes regarding the relationship, then each relationship returned must match all the 
attributes specified. For each organization returned, all its relationships, as parent or child, with 
other organizations are returned. </con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_name">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_name" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                <dsml:equalityMatch name="givenName">
                    <dsml:value>John</dsml:value>
                </dsml:equalityMatch>
                </dsml:filter>
                <dsml:attributes>
	               <dsml:attribute name="uid"/>
	               <dsml:attribute name="hcIdentifier"/>
	               <dsml:attribute name="hcProfession"/>
	               <dsml:attribute name="description"/>
	               <dsml:attribute name="hpdProviderStatus"/>
	               <dsml:attribute name="displayName"/>
	               <dsml:attribute name="title"/>
	               <dsml:attribute name="givenName"/>
	               <dsml:attribute name="initials"/>
	               <dsml:attribute name="sn"/>
	               <dsml:attribute name="cn"/>
	               <dsml:attribute name="hpdProviderLanguageSupported"/>
	               <dsml:attribute name="gender"/>
	               <dsml:attribute name="mail"/>
		           <dsml:attribute name="physicalDeliveryOfficeName"/>
	               <dsml:attribute name="hpdProviderMailingAddress"/>
	               <dsml:attribute name="hpdProviderBillingAddress"/>
	               <dsml:attribute name="hpdProviderPracticeAddress"/>
	               <dsml:attribute name="telephoneNumber"/>
	               <dsml:attribute name="mobile"/>
	               <dsml:attribute name="pager"/>
	               <dsml:attribute name="facsimileTelephoneNumber"/>
	               <dsml:attribute name="hcSpecialization"/>
	               <dsml:attribute name="suffix"/>
	               <dsml:attribute name="hpdHasAService"/>
	               <dsml:attribute name="hpdProviderLegalAddress"/>
                </dsml:attributes>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_org_by_HcIdentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_HcIdentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:or>
                     <dsml:equalityMatch name="HcIdentifier">
                        <dsml:value>org2</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="HcIdentifier">
                        <dsml:value>org4</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:or>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hcIdentifier"/>
                  <dsml:attribute name="o"/>
                  <dsml:attribute name="businessCategory"/>
                  <dsml:attribute name="hcRegisteredName"/>
                  <dsml:attribute name="description"/>
                  <dsml:attribute name="hpdProviderStatus"/>
                  <dsml:attribute name="clinicalInformationContact"/>
                  <dsml:attribute name="hpdProviderMailingAddress"/>
                  <dsml:attribute name="hpdProviderBillingAddress"/>
                  <dsml:attribute name="hpdProviderPracticeAddress"/>
                  <dsml:attribute name="hpdProviderLanguageSupported"/>
                  <dsml:attribute name="hcSpecialization"/>
                     <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="policyInformation"/>
                  <dsml:attribute name="hpdOrgId"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:or>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                     </dsml:or>
                     <dsml:present name="hpdHasASubOrg"/>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasASubOrg" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasASubOrg" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:or>
                     <dsml:equalityMatch name="hpdHasASubOrg">
                        <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                     <dsml:equalityMatch name="hpdHasASubOrg">
                        <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:or>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:testStep type="request" name="search_membership_by_hpdHasAnOrg_and_hpdHasAProvider" disabled="true">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdHasAnOrg_and_hpdHasAProvider" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:and>
                     <dsml:or>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                        <dsml:equalityMatch name="hpdHasAnOrg">
                           <dsml:value>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</dsml:value>
                        </dsml:equalityMatch>
                     </dsml:or>
                     <dsml:equalityMatch name="hpdHasAProvider">
                     	<dsml:value>HcIdentifier=provider2,ou=Providers,${#Project#project.test.server.dsml.dn.base}</dsml:value>
                     </dsml:equalityMatch>
                  </dsml:and>
               </dsml:filter>
               <dsml:attributes>
                  <dsml:attribute name="hpdMemberId"/>
                  <dsml:attribute name="hpdHasAProvider"/>
                  <dsml:attribute name="hpdHasAnOrg"/>
                  <dsml:attribute name="hpdHasASubOrg"/>
                  <dsml:attribute name="hpdHasAService"/>
                  <dsml:attribute name="telephoneNumber"/>
                  <dsml:attribute name="mail"/>
                  <dsml:attribute name="facsimileTelephoneNumber"/>
                  <dsml:attribute name="mobile"/>
                  <dsml:attribute name="pager"/>
               </dsml:attributes>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep><con:properties/>
    </con:testCase><con:properties/>
  </con:testSuite>
    
      <con:testSuite name="Verify_Providers_Plus"><con:description>The following test cases request each provider by its RDN, which in this case is the attribute "HcIdentifier," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HcIdentifier=provider1" searchProperties="true" id="f3648a00-f461-4b97-8fb9-54253539c09b">
      <con:description>Basic search for Provider by HcIdentifier attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_hcidentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_hcidentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>${#TestCase#rdn}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>25</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>HcIdentifier=${#TestCase#rdn},ou=Providers,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr cn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^cn$","i")]]/dsml:value</path><content>Thomas Jones</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr sn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^sn$","i")]]/dsml:value</path><content>Jones</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>This is the description for Thomas Jones.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 685 622 6202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 225 216 5900</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr title XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^title$","i")]]/dsml:value</path><content>Thomas Jones' title</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr givenName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^givenName$","i")]]/dsml:value</path><content>Thomas</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value</path><content>thomas.jones@mail1.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value</path><content>+1 010 154 3228</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value</path><content>+1 779 041 6341</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr uid XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^uid$","i")]]/dsml:value</path><content>thomas.jones</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr initials XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^initials$","i")]]/dsml:value</path><content>ASA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr gender XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^gender$","i")]]/dsml:value</path><content>m</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcIdentifier$","i")]]/dsml:value</path><content>provider1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcProfession XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcProfession$","i")]]/dsml:value</path><content>Doctor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRole XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcRole$","i")]]/dsml:value</path><content>HL-7 code for role</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcSpecialization$","i")]]/dsml:value</path><content>Orthopedic Surgeon</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdCredential$","i")]]/dsml:value</path><content>hpdCredentialId=1,ou=Credentials,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdHasAService$","i")]]/dsml:value</path><content>hpdServiceId=6,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderBillingAddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLanguageSupported$","i")]]/dsml:value</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLegalAddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderMailingAddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderPracticeAddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderStatus$","i")]]/dsml:value</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organizationalperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organizationalperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCProfessional XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCProfessional"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass inetorgperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="inetorgperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass naturalPerson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="naturalPerson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass person XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="person"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>provider1</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HcIdentifier=provider2" searchProperties="true" id="b2856207-861c-4f51-981a-ccddffc07fb3">
      <con:description>Basic search for Provider by HcIdentifier attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_hcidentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_hcidentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>${#TestCase#rdn}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>21</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>HcIdentifier=${#TestCase#rdn},ou=Providers,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr cn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^cn$","i")]]/dsml:value</path><content>John Smith</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr sn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^sn$","i")]]/dsml:value</path><content>Smith</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>This is the description for John Smith.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 685 622 6202</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 225 216 5901</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr title XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^title$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr givenName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^givenName$","i")]]/dsml:value</path><content>John</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value</path><content>john.smith@mail2.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value</path><content>+1 010 154 3228</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value</path><content>+1 779 041 6341</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr uid XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^uid$","i")]]/dsml:value</path><content>john.smith</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr initials XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^initials$","i")]]/dsml:value</path><content>JS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr gender XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^gender$","i")]]/dsml:value</path><content>m</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcIdentifier$","i")]]/dsml:value</path><content>provider2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcProfession XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcProfession$","i")]]/dsml:value</path><content>Doctor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRole XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcRole$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcSpecialization$","i")]]/dsml:value</path><content>Ear Nose Throat</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdCredential$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdHasAService$","i")]]/dsml:value</path><content>hpdServiceId=6,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderBillingAddress$","i")]]/dsml:value</path><content>John Smith$01251 Wallnut Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLanguageSupported$","i")]]/dsml:value</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLegalAddress$","i")]]/dsml:value</path><content>John Smith$01251 Wallnut Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderMailingAddress$","i")]]/dsml:value</path><content>John Smith$01251 Wallnut Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderPracticeAddress$","i")]]/dsml:value</path><content>John Smith$01251 Wallnut Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderStatus$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organizationalperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organizationalperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCProfessional XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCProfessional"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass inetorgperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="inetorgperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass naturalPerson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="naturalPerson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass person XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="person"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>provider2</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HcIdentifier=provider3" searchProperties="true" id="54f79bb6-1498-4f7e-aa07-b68520346e4d">
      <con:description>Basic search for Provider by HcIdentifier attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_hcidentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_hcidentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>${#TestCase#rdn}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>19</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>HcIdentifier=${#TestCase#rdn},ou=Providers,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr cn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^cn$","i")]]/dsml:value</path><content>Bob Jefferson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr sn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^sn$","i")]]/dsml:value</path><content>Jefferson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>This is the description for Bob Jefferson.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 685 622 6201</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 225 216 5900</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr title XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^title$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr givenName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^givenName$","i")]]/dsml:value</path><content>Bob</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value</path><content>bob.jefferson@mail3.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value</path><content>+1 010 154 3228</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value</path><content>+1 779 041 6341</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr uid XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^uid$","i")]]/dsml:value</path><content>bob.jefferson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr initials XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^initials$","i")]]/dsml:value</path><content>JS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr gender XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^gender$","i")]]/dsml:value</path><content>m</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcIdentifier$","i")]]/dsml:value</path><content>provider3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcProfession XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcProfession$","i")]]/dsml:value</path><content>Doctor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRole XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcRole$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcSpecialization$","i")]]/dsml:value</path><content>OBGYN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdCredential$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdHasAService$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderBillingAddress$","i")]]/dsml:value</path><content>Bob Jefferson$123 Oak Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLanguageSupported$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLegalAddress$","i")]]/dsml:value</path><content>Bob Jefferson$123 Oak Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderMailingAddress$","i")]]/dsml:value</path><content>Bob Jefferson$123 Oak Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderPracticeAddress$","i")]]/dsml:value</path><content>Bob Jefferson$123 Oak Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderStatus$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organizationalperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organizationalperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCProfessional XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCProfessional"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass inetorgperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="inetorgperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass naturalPerson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="naturalPerson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass person XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="person"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>provider3</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Organizations_Plus"><con:description>The following test cases request each organization by its RDN, which in this case is the attribute "hpdOrgId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdOrgId=org1" searchProperties="true" id="f51bba4f-6eab-4c59-98ac-e7ff9f66db16">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_hpdOrgId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hpdOrgId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>18</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdOrgId=${#TestCase#rdn},ou=Organizations,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^o$","i")]]/dsml:value</path><content>Dr. Thomas Jones' Private Practice</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^businessCategory$","i")]]/dsml:value</path><content>MRI</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Performs magnetic resonance imaging</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7899</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcidentifier$","i")]]/dsml:value</path><content>org1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdorgid$","i")]]/dsml:value</path><content>org1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^clinicalinformationcontact$","i")]]/dsml:value</path><content>HcIdentifier=provider1,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcregisteredname$","i")]]/dsml:value</path><content>Dr. Thomas Jones' Private Practice</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcspecialization$","i")]]/dsml:value</path><content>HL-7 specialization</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredential$","i")]]/dsml:value</path><content>hpdCredentialId=2,ou=Credentials,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value</path><content>hpdServiceId=4,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderbillingaddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlanguagesupported$","i")]]/dsml:value</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlegaladdress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdprovidermailingaddress$","i")]]/dsml:value</path><content>Dr. Thomas Jones Private Practice$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderpracticeaddress$","i")]]/dsml:value</path><content>Thomas Jones$01251 Chestnut Street$Panama City, DE 50369</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderstatus$","i")]]/dsml:value</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCRegulatedOrganization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCRegulatedOrganization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>org1</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdOrgId=org2" searchProperties="true" id="5c9658f4-fb89-4ca9-9621-b38354825654">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_hpdOrgId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hpdOrgId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdOrgId=${#TestCase#rdn},ou=Organizations,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^o$","i")]]/dsml:value</path><content>Panama City Clinic</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^businessCategory$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcidentifier$","i")]]/dsml:value</path><content>org2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdorgid$","i")]]/dsml:value</path><content>org2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^clinicalinformationcontact$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcregisteredname$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcspecialization$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredential$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderbillingaddress$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlanguagesupported$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlegaladdress$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdprovidermailingaddress$","i")]]/dsml:value</path><content>Panama City Clinic$01251 Wallnut Street$Panama City, DE 50371</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderpracticeaddress$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderstatus$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCRegulatedOrganization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCRegulatedOrganization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>org2</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdOrgId=org4" searchProperties="true" id="828301f3-8290-45b5-a149-0dc3b7a5a823">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_hpdOrgId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hpdOrgId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>16</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdOrgId=${#TestCase#rdn},ou=Organizations,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^o$","i")]]/dsml:value</path><content>Northside Hospital Maternity Unit</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^businessCategory$","i")]]/dsml:value</path><content>Maternity</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Maternity care unit at Northside Hospital</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcidentifier$","i")]]/dsml:value</path><content>org4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdorgid$","i")]]/dsml:value</path><content>org4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^clinicalinformationcontact$","i")]]/dsml:value</path><content>HcIdentifier=provider1,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcregisteredname$","i")]]/dsml:value</path><content>Northside Hospital Maternity Care</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcspecialization$","i")]]/dsml:value</path><content>HL-7 specialization</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredential$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderbillingaddress$","i")]]/dsml:value</path><content>Billing$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlanguagesupported$","i")]]/dsml:value</path><content>en sp jpn</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlegaladdress$","i")]]/dsml:value</path><content>Legal$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdprovidermailingaddress$","i")]]/dsml:value</path><content>Mail$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderpracticeaddress$","i")]]/dsml:value</path><content>Practice$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderstatus$","i")]]/dsml:value</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCRegulatedOrganization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCRegulatedOrganization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>org4</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdOrgId=org5" searchProperties="true" id="02e6b870-f6fa-4e07-9970-7224a6f19106">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_hpdOrgId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hpdOrgId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>18</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdOrgId=${#TestCase#rdn},ou=Organizations,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^o$","i")]]/dsml:value</path><content>Northside Hospital</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^businessCategory$","i")]]/dsml:value</path><content>Hospital</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Hospital</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcidentifier$","i")]]/dsml:value</path><content>org5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdorgid$","i")]]/dsml:value</path><content>org5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^clinicalinformationcontact$","i")]]/dsml:value</path><content>HcIdentifier=provider1,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcregisteredname$","i")]]/dsml:value</path><content>Northside Hospital of Georgia</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcspecialization$","i")]]/dsml:value</path><content>HL-7 specialization</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredential$","i")]]/dsml:value</path><content>hpdCredentialId=2,ou=Credentials,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value</path><content>hpdServiceId=4,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderbillingaddress$","i")]]/dsml:value</path><content>Billing$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlanguagesupported$","i")]]/dsml:value</path><content>en sp jpn</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlegaladdress$","i")]]/dsml:value</path><content>Legal$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdprovidermailingaddress$","i")]]/dsml:value</path><content>Mail$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderpracticeaddress$","i")]]/dsml:value</path><content>Practice$123 Peachtree Street$Atlanta, GA 30032</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderstatus$","i")]]/dsml:value</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCRegulatedOrganization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCRegulatedOrganization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>org5</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Memberships_Plus"><con:description>The following test cases request each membership by its RDN, which in this case is the attribute "hpdMemberId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=1" searchProperties="true" id="c662670a-8965-44d4-8010-c78991f65042">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org1,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value</path><content>hpdServiceId=1,ou=Services,o=dev.provider-directories.com,dc=hpd^hpdServiceId=2,ou=Services,o=dev.provider-directories.com,dc=hpd^hpdServiceId=3,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider1,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value</path><content>hpdmemberid1@direct.direct.org</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value</path><content>+1 123 456 7890</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>1</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=2" searchProperties="true" id="3dc29fc4-97d8-4cd6-9561-946b03c0fed5">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider2,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>2</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=3" searchProperties="true" id="4353fd97-92ab-4ca6-91c9-bb30b456c597">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org2,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider3,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>3</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=4" searchProperties="true" id="bb311e6a-d3f1-4e0d-8e42-56cde7085ef1">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org5,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>4</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=5" searchProperties="true" id="b0757ccf-adc0-4cbd-a7c5-f3a2f573193c">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org4,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value</path><content>hpdServiceId=5,ou=Services,o=dev.provider-directories.com,dc=hpd^hpdServiceId=2,ou=Services,o=dev.provider-directories.com,dc=hpd^hpdServiceId=3,ou=Services,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider3,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>5</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Credentials_Plus"><con:description>The following test cases request each credential by its RDN, which in this case is the attribute "hpdCredentialId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdCredentialId=1" searchProperties="true" id="7e860cdc-a65a-4d22-8f07-0092d5250804">
      <con:description>Basic search for Credential by hpdCredentialId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_credential_by_hpdCredentialId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_credential_by_hpdCredentialId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Credentials,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdCredentialId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdCredentialId=${#TestCase#rdn},ou=Credentials,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredentialId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredentialid$","i")]]/dsml:value</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialname$","i")]]/dsml:value</path><content>Delaware medical license</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialnumber$","i")]]/dsml:value</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialType XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialtype$","i")]]/dsml:value</path><content>medicalLicense</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Thomas Jones' Delaware medical license</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialIssueDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialissuedate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialRenewalDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialrenewaldate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialstatus$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderCredential"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>1</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdCredentialId=2" searchProperties="true" id="663da4c0-b782-4a4c-b2a2-82647f21b5e5">
      <con:description>Basic search for Credential by hpdCredentialId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_credential_by_hpdCredentialId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_credential_by_hpdCredentialId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Credentials,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdCredentialId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>10</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdCredentialId=${#TestCase#rdn},ou=Credentials,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredentialId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredentialid$","i")]]/dsml:value</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialname$","i")]]/dsml:value</path><content>Delaware organizational facility credential</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialnumber$","i")]]/dsml:value</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialType XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialtype$","i")]]/dsml:value</path><content>credential</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Thomas Jones' organizational credential</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialIssueDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialissuedate$","i")]]/dsml:value</path><content>19851106210627.3-0500</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialRenewalDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialrenewaldate$","i")]]/dsml:value</path><content>19921106210627.3-0500</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialstatus$","i")]]/dsml:value</path><content>Active</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org1,ou=Organizations,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider3,ou=Providers,o=dev.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderCredential"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>2</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Services_Plus"><con:description>The following test cases request each Service by its RDN, which in this case is the attribute "hpdServiceId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=1" searchProperties="true" id="9909bb92-1722-4873-85ac-26e360f0ee26">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>thomas.jones@direct.service1.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value</path><content>MIICqjCCAZKgAwIBAgIJAMd5Vfs3Eo6kMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNVBAMTAm1rMB4XDTEzMDUwMjE0MzMyNVoXDTIzMDQzMDE0MzMyNVowDTELMAkGA1UEAxMCbWswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGHnk7g0gS4JmDs1mNjsHFFEMuHmTtIvIPWbjsnbZRcy4teJE4D5/EShMQiOaujNO1mg6ib4hnEXPQ9q1sQhFg/5lC0Xwq3LGy7t9NlmRjrNKxejCYE04QptAK5vGg8dK3jcsfMEmHHxoonx38HpC24PvTJgY+efwBxTDQrZu3rMw2Jr/QERT6pbQEZbpsr0+ZizLv2C/mweE62pGcKCA2WEffetL+qtoN3RWWagxSYx/jjJdT6UGn3KLEhoNSVm6LidmbKx4AwAysYjfOPF8m06pF0khTlXMLyw6LyKwUYMpHSRmmlA6tyjUAsF9Cy+hY4VLPWXaNK6ruzH+s5BBHAgMBAAGjDTALMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQEFBQADggEBABPF45byPxZ9z78YBPE6IbYkxuY1dEt05ZP5YsKS76M7m9OYUryaPcWvt1ctdV2oJbJ+9vEVwDOKxD6gkLd1oIsw2nD9U3YYtHrcej2ytw3XcA+okzUoNVPblGTUSF7dMuc3MyQPhnIt6iOZKuzRDG1Ruk4XHyXHc1sngsHp/THKsCjz+rZlgjlX4iatPAhz30FnBVZ7UVeAKftcDwpBdggJxvEAoEGvRpm7X8OlqQI2jmm/Oxlw70mjCZTzJFtOFOJfhomCEiQXSz/4tobOgw66ooBNWUd7f5MfAhquBV2/kDK5bnbOGJ30vzHBj9CUf8tTflVoSO0cwbuGBddusEU=</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>DirectProjectSMTP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>PDF</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>1</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=2" searchProperties="true" id="eb811e9e-261f-4eab-8c40-17c34955204b">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>https://service2.com:8181/DocumentRegistry_Service/DocumentRegistry</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>SOAP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>XDS:DocumentRegistry:Provide&amp;Register</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>2</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=3" searchProperties="true" id="eea9ee63-b35f-4d62-a9cb-491c3e41155e">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>67.59.166.230:5000</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>MLLP HL7 V2.5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>S&amp;ILRIORURO1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>3</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=4" searchProperties="true" id="9231e83b-a7a8-4a22-ad19-80ee2eeb5f51">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>thomas.jones@direct.service1.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value</path><content>MIICqjCCAZKgAwIBAgIJAMd5Vfs3Eo6kMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNVBAMTAm1rMB4XDTEzMDUwMjE0MzMyNVoXDTIzMDQzMDE0MzMyNVowDTELMAkGA1UEAxMCbWswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGHnk7g0gS4JmDs1mNjsHFFEMuHmTtIvIPWbjsnbZRcy4teJE4D5/EShMQiOaujNO1mg6ib4hnEXPQ9q1sQhFg/5lC0Xwq3LGy7t9NlmRjrNKxejCYE04QptAK5vGg8dK3jcsfMEmHHxoonx38HpC24PvTJgY+efwBxTDQrZu3rMw2Jr/QERT6pbQEZbpsr0+ZizLv2C/mweE62pGcKCA2WEffetL+qtoN3RWWagxSYx/jjJdT6UGn3KLEhoNSVm6LidmbKx4AwAysYjfOPF8m06pF0khTlXMLyw6LyKwUYMpHSRmmlA6tyjUAsF9Cy+hY4VLPWXaNK6ruzH+s5BBHAgMBAAGjDTALMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQEFBQADggEBABPF45byPxZ9z78YBPE6IbYkxuY1dEt05ZP5YsKS76M7m9OYUryaPcWvt1ctdV2oJbJ+9vEVwDOKxD6gkLd1oIsw2nD9U3YYtHrcej2ytw3XcA+okzUoNVPblGTUSF7dMuc3MyQPhnIt6iOZKuzRDG1Ruk4XHyXHc1sngsHp/THKsCjz+rZlgjlX4iatPAhz30FnBVZ7UVeAKftcDwpBdggJxvEAoEGvRpm7X8OlqQI2jmm/Oxlw70mjCZTzJFtOFOJfhomCEiQXSz/4tobOgw66ooBNWUd7f5MfAhquBV2/kDK5bnbOGJ30vzHBj9CUf8tTflVoSO0cwbuGBddusEU=</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>DirectProjectSMTP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>C32</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>4</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=5" searchProperties="true" id="008af1fe-c040-4e48-8fa0-4a4f6249831a">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>bob.jefferson@direct.northside.maternity.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value</path><content>MIICqjCCAZKgAwIBAgIJAMd5Vfs3Eo6kMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNVBAMTAm1rMB4XDTEzMDUwMjE0MzMyNVoXDTIzMDQzMDE0MzMyNVowDTELMAkGA1UEAxMCbWswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGHnk7g0gS4JmDs1mNjsHFFEMuHmTtIvIPWbjsnbZRcy4teJE4D5/EShMQiOaujNO1mg6ib4hnEXPQ9q1sQhFg/5lC0Xwq3LGy7t9NlmRjrNKxejCYE04QptAK5vGg8dK3jcsfMEmHHxoonx38HpC24PvTJgY+efwBxTDQrZu3rMw2Jr/QERT6pbQEZbpsr0+ZizLv2C/mweE62pGcKCA2WEffetL+qtoN3RWWagxSYx/jjJdT6UGn3KLEhoNSVm6LidmbKx4AwAysYjfOPF8m06pF0khTlXMLyw6LyKwUYMpHSRmmlA6tyjUAsF9Cy+hY4VLPWXaNK6ruzH+s5BBHAgMBAAGjDTALMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQEFBQADggEBABPF45byPxZ9z78YBPE6IbYkxuY1dEt05ZP5YsKS76M7m9OYUryaPcWvt1ctdV2oJbJ+9vEVwDOKxD6gkLd1oIsw2nD9U3YYtHrcej2ytw3XcA+okzUoNVPblGTUSF7dMuc3MyQPhnIt6iOZKuzRDG1Ruk4XHyXHc1sngsHp/THKsCjz+rZlgjlX4iatPAhz30FnBVZ7UVeAKftcDwpBdggJxvEAoEGvRpm7X8OlqQI2jmm/Oxlw70mjCZTzJFtOFOJfhomCEiQXSz/4tobOgw66ooBNWUd7f5MfAhquBV2/kDK5bnbOGJ30vzHBj9CUf8tTflVoSO0cwbuGBddusEU=</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>DirectProjectSMTP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>C64</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>5</con:value></con:property></con:properties>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=6" searchProperties="true" id="43c6bffe-04c0-4b37-9bcd-4c8ce313e6d6">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>john.smith@direct.panama_city_clinic.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value</path><content>MIICqjCCAZKgAwIBAgIJAMd5Vfs3Eo6kMA0GCSqGSIb3DQEBBQUAMA0xCzAJBgNVBAMTAm1rMB4XDTEzMDUwMjE0MzMyNVoXDTIzMDQzMDE0MzMyNVowDTELMAkGA1UEAxMCbWswggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDGHnk7g0gS4JmDs1mNjsHFFEMuHmTtIvIPWbjsnbZRcy4teJE4D5/EShMQiOaujNO1mg6ib4hnEXPQ9q1sQhFg/5lC0Xwq3LGy7t9NlmRjrNKxejCYE04QptAK5vGg8dK3jcsfMEmHHxoonx38HpC24PvTJgY+efwBxTDQrZu3rMw2Jr/QERT6pbQEZbpsr0+ZizLv2C/mweE62pGcKCA2WEffetL+qtoN3RWWagxSYx/jjJdT6UGn3KLEhoNSVm6LidmbKx4AwAysYjfOPF8m06pF0khTlXMLyw6LyKwUYMpHSRmmlA6tyjUAsF9Cy+hY4VLPWXaNK6ruzH+s5BBHAgMBAAGjDTALMAkGA1UdEwQCMAAwDQYJKoZIhvcNAQEFBQADggEBABPF45byPxZ9z78YBPE6IbYkxuY1dEt05ZP5YsKS76M7m9OYUryaPcWvt1ctdV2oJbJ+9vEVwDOKxD6gkLd1oIsw2nD9U3YYtHrcej2ytw3XcA+okzUoNVPblGTUSF7dMuc3MyQPhnIt6iOZKuzRDG1Ruk4XHyXHc1sngsHp/THKsCjz+rZlgjlX4iatPAhz30FnBVZ7UVeAKftcDwpBdggJxvEAoEGvRpm7X8OlqQI2jmm/Oxlw70mjCZTzJFtOFOJfhomCEiQXSz/4tobOgw66ooBNWUd7f5MfAhquBV2/kDK5bnbOGJ30vzHBj9CUf8tTflVoSO0cwbuGBddusEU=</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>DirectProjectSMTP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>C64</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>6</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Federated_Providers_Plus"><con:description>The following test cases request each provider by its RDN, which in this case is the attribute "HcIdentifier," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="HcIdentifier=provider100" searchProperties="true" id="151f254b-c142-47de-80f1-381e8f577ba4">
      <con:description>Basic search for Provider by HcIdentifier attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_provider_by_hcidentifier">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_provider_by_hcidentifier" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
         <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Providers,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
               <dsml:filter>
                  <dsml:equalityMatch name="HcIdentifier">
                     <dsml:value>${#TestCase#rdn}</dsml:value>
                  </dsml:equalityMatch>
               </dsml:filter>
            </dsml:searchRequest>
         </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration><definition/></con:configuration>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
			
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>21</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>HcIdentifier=${#TestCase#rdn},ou=Providers,${#Project#project.test.server.dsml.federated.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr cn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^cn$","i")]]/dsml:value</path><content>Albert Johnson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr sn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^sn$","i")]]/dsml:value</path><content>Johnson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>This is the description for Albert Johnson.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value</path><content>+1 125 839 6433</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value</path><content>+1 125 839 6432</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr title XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^title$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr givenName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^givenName$","i")]]/dsml:value</path><content>Albert</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value</path><content>albert.johnson@mail1.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value</path><content>+1 432 234 5653</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value</path><content>+1 349 343 8432</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr uid XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^uid$","i")]]/dsml:value</path><content>albert.johnson</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr initials XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^initials$","i")]]/dsml:value</path><content>AJ</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr gender XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^gender$","i")]]/dsml:value</path><content>m</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcIdentifier$","i")]]/dsml:value</path><content>provider100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcProfession XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcProfession$","i")]]/dsml:value</path><content>Doctor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRole XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcRole$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^HcSpecialization$","i")]]/dsml:value</path><content>Neurosurgeon</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdCredential$","i")]]/dsml:value</path><content>hpdCredentialId=100,ou=Credentials,o=dev2.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdHasAService$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderBillingAddress$","i")]]/dsml:value</path><content>Albert Johnson$532 Maple Drive$Austin, TX 78610</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLanguageSupported$","i")]]/dsml:value</path><content>en</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderLegalAddress$","i")]]/dsml:value</path><content>Albert Johnson$532 Maple Drive$Austin, TX 78610</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderMailingAddress$","i")]]/dsml:value</path><content>Albert Johnson$532 Maple Drive$Austin, TX 78610</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderPracticeAddress$","i")]]/dsml:value</path><content>Albert Johnson$532 Maple Drive$Austin, TX 78610</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdProviderStatus$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organizationalperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organizationalperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCProfessional XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCProfessional"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass inetorgperson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="inetorgperson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass naturalPerson XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="naturalPerson"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass person XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="person"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>provider100</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Federated_Organizations_Plus"><con:description>The following test cases request each organization by its RDN, which in this case is the attribute "hpdOrgId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdOrgId=org100" searchProperties="true" id="662f7395-0b0a-4609-b9f7-34986b93ba8b">
      <con:description>Basic search for Organization by hpdOrgId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_org_by_hpdOrgId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_org_by_hpdOrgId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Organizations,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdOrgId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdOrgId=${#TestCase#rdn},ou=Organizations,${#Project#project.test.server.dsml.federated.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr o XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^o$","i")]]/dsml:value</path><content>Maple Neurosurgery Clinic</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr businessCategory XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^businessCategory$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimileTelephoneNumber$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephoneNumber$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcIdentifier XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcidentifier$","i")]]/dsml:value</path><content>org100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdOrgId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdorgid$","i")]]/dsml:value</path><content>org100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr ClinicalInformationContact XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^clinicalinformationcontact$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcRegisteredName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcregisteredname$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr HcSpecialization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hcspecialization$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredential$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderBillingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderbillingaddress$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLanguageSupported XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlanguagesupported$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderLegalAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderlegaladdress$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderMailingAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdprovidermailingaddress$","i")]]/dsml:value</path><content>Maple Neurosurgery Clinic$532 Maple Drive$Austin, TX 78610</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderPracticeAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderpracticeaddress$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdProviderStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdproviderstatus$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HCRegulatedOrganization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HCRegulatedOrganization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProvider"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass organization XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="organization"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>org100</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Federated_Memberships_Plus"><con:description>The following test cases request each membership by its RDN, which in this case is the attribute "hpdMemberId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdMemberId=100" searchProperties="true" id="718cf423-861a-44cc-aade-161c9af3cada">
      <con:description>Basic search for Membership by hpdMemberId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_membership_by_hpdMemberId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_membership_by_hpdMemberId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Memberships,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdMemberId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion><con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdMemberId=${#TestCase#rdn},ou=Memberships,${#Project#project.test.server.dsml.federated.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value</path><content>hpdOrgId=org100,ou=Organizations,o=dev2.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdMemberId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdmemberid$","i")]]/dsml:value</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaservice$","i")]]/dsml:value</path><content>hpdServiceId=100,ou=Services,o=dev2.provider-directories.com</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value</path><content>HcIdentifier=provider100,ou=Providers,o=dev2.provider-directories.com,dc=hpd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mail XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mail$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr mobile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^mobile$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr pager XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^pager$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr telephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^telephonenumber$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr facsimileTelephoneNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^facsimiletelephonenumber$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderMembership XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderMembership"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>100</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Federated_Credentials_Plus"><con:description>The following test cases request each credential by its RDN, which in this case is the attribute "hpdCredentialId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdCredentialId=100" searchProperties="true" id="afc49652-94ba-406e-9a1a-a74ae9f18d70">
      <con:description>Basic search for Credential by hpdCredentialId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_credential_by_hpdCredentialId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_credential_by_hpdCredentialId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
        <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <dsml:searchRequest dn="ou=Credentials,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
                <dsml:filter>
                   <dsml:equalityMatch name="hpdCredentialId">
                      <dsml:value>${#TestCase#rdn}</dsml:value>
                   </dsml:equalityMatch>
                </dsml:filter>
            </dsml:searchRequest>
        </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>5</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdCredentialId=${#TestCase#rdn},ou=Credentials,${#Project#project.test.server.dsml.federated.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCredentialId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcredentialid$","i")]]/dsml:value</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialName XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialname$","i")]]/dsml:value</path><content>Texas medical license</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialNumber XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialnumber$","i")]]/dsml:value</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialType XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialtype$","i")]]/dsml:value</path><content>medicalLicense</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr description XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^description$","i")]]/dsml:value</path><content>Albert Johnson's Texas medical license</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialIssueDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialissuedate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialRenewalDate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialrenewaldate$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr credentialStatus XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^credentialstatus$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAnOrg XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasanorg$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdHasAProvider XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdhasaprovider$","i")]]/dsml:value)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDProviderCredential XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDProviderCredential"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
            <con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>100</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:testSuite name="Verify_Federated_Services_Plus"><con:description>The following test cases request each Service by its RDN, which in this case is the attribute "hpdServiceId," and verifies that all attributes are either present and correct, or not present, as the case may be.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="hpdServiceId=100" searchProperties="true" id="59cb41a2-3d25-4d59-bbe7-6d6c3ec4ac24">
      <con:description>Basic search for Service by hpdServiceId attribute</con:description><con:settings/>
      <con:testStep type="request" name="search_service_by_hpdServiceId">
        <con:settings/>
        <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:interface>Hpd_Plus_ProviderInformationDirectory_Port_SoapBinding</con:interface>
          <con:operation>Hpd_Plus_ProviderInformationQueryRequest</con:operation>
          <con:request name="search_service_by_hpdServiceId" outgoingWss="" incomingWss="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#project.test.server.wsdl.url}</con:endpoint>
            <con:request><![CDATA[<soap-env:Envelope xmlns:soap-env="http://www.w3.org/2003/05/soap-envelope">
   <soap-env:Body>
      <hpdplus:hpdPlusRequest requestID="${=project.name}_${=testSuite.name}_${=testCase.name}_${=testStep.name}_${=request.name}_${=UUID.randomUUID()}" xmlns:hpdplus="urn:gov:hhs:onc:hpdplus:2013">
      <dsml:batchRequest xmlns:dsml="urn:oasis:names:tc:DSML:2:0:core" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <dsml:searchRequest dn="ou=Services,${#Project#project.test.server.dsml.dn.base}" scope="singleLevel" derefAliases="derefFindingBaseObj">
            <dsml:filter>
               <dsml:equalityMatch name="hpdServiceId">
                  <dsml:value>${#TestCase#rdn}</dsml:value>
               </dsml:equalityMatch>
            </dsml:filter>
         </dsml:searchRequest>
      </dsml:batchRequest>
      </hpdplus:hpdPlusRequest>
   </soap-env:Body>
</soap-env:Envelope>]]></con:request>
            <con:assertion type="SOAP Response"/>
            <con:assertion type="Schema Compliance">
              <con:configuration/>
            </con:assertion>
            <con:assertion type="SOAP Fault Assertion"/>
<con:assertion type="XPath Match" name="count attr XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
count(//dsml:attr[@name!="objectClass"])</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="dn XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/@dn</path><content>hpdServiceId=${#TestCase#rdn},ou=Services,${#Project#project.test.server.dsml.federated.dn.base}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceAddress XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceaddress$","i")]]/dsml:value</path><content>http://caqh.org/SOAP/WSDL/CORERule2.2.0.wsdl</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdServiceId XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdserviceid$","i")]]/dsml:value</path><content>100</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdCertificate XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
empty(//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcertificate$","i")]]/dsml:value)</path><content>true</content>><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdIntegrationProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdintegrationprofile$","i")]]/dsml:value</path><content>CAQH CORE Connectivity Rule</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr hpdContentProfile XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^hpdcontentprofile$","i")]]/dsml:value</path><content>CAQH CORE Phase I Operating Rules</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass top XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="top"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:assertion type="XPath Match" name="attr objectClass HPDElectronicService XPath Match"><con:configuration><path>declare namespace dsml='urn:oasis:names:tc:DSML:2:0:core';
//dsml:searchResultEntry/dsml:attr[@name[matches(.,"^objectClass$","i")]]/dsml:value="HPDElectronicService"</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion>
<con:credentials>
              <con:username xsi:nil="true"/>
              <con:password xsi:nil="true"/>
              <con:domain xsi:nil="true"/>
              <con:authType>Global HTTP Settings</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:wsaConfig mustUnderstand="NONE" version="200508"/>
            <con:wsrmConfig version="1.2"/>
          </con:request>
        </con:config>
      </con:testStep>
      <con:properties><con:property><con:name>rdn</con:name><con:value>100</con:value></con:property></con:properties>
    </con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>project.test.server.wsdl.url</con:name><con:value>http://prod.provider-directories.com/pdti-server/Hpd_Plus_ProviderInformationDirectoryService?wsdl</con:value></con:property><con:property><con:name>project.test.server.dsml.dn.base</con:name><con:value>o=dev.provider-directories.com,dc=hpd</con:value></con:property><con:property><con:name>project.test.server.dsml.federated.dn.base</con:name><con:value>o=dev2.provider-directories.com,dc=hpd</con:value></con:property></con:properties><con:wssContainer/>
  <con:sensitiveInformation/>
</con:soapui-project>